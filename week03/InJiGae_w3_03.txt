알파베타 가지치기 Pseudocode 알고리즘
function alphabeta(node, depth, a, b, maxPlayer)                            // 재귀함수 형식 - 탈출 조건 마련 필요
    if depth == 0 or node가 단말노드 then                                     // 무한루프 탈출 조건
        return node의 휴리스틱 값                                             // 평가값 리턴 - 재귀 과정 끝
    if maxPlayer then                                                       // 최대화 경기자: 만약 지금 플레이어가 Max라면
        value <-- -inf                                                      // 초기 선택 가능한 최솟값에 -무한대 -> 무조건 바뀜
        for each child of node do                                           // 각각의 자식 노드들을 검색
            value <-- max(value, alphabeta(child, depth - 1, a, b, False))  // max값들을 검사 - 기존 value값과 다시 한번 알파베타 돌린 결과
            a <-- max(a, value)                                             // 최댓값 선택
            if a >= b then
                break                                                       // 이것이 베타컷이다 -> 같은 레벨의 형제 노드들을 더이상 검색하지 않겠다는 의미
        return value                                                        // 최댓값 리턴 통한 함수 종료
    else                                                                    // 최소화 경기자: 만약 지금 플레이어가 Min이라면
        value <-- inf
        for each child of node do
            value <-- min(value, alphabeta(child, depth - 1, a, b, True))
            b <-- min(b, value)                                             // 최솟값 선택
            if a >= b then
                break                                                       // 이것이 알파컷이다 -> 같은 레벨의 형제 노드들을 더이상 검색하지 않겠다는 의미
        return value                                                        // 최솟값 리턴 통한 함수 종료